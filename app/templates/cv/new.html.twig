{% extends 'base.html.twig' %}
{% form_theme form.theme 'form/custom_types.html.twig' %}
{#{% form_theme form.theme.subTheme 'form/custom_types1.html.twig' %}#}
{#{% form_theme form _self %}#}

{% block title %}New Header{% endblock %}

{% block body %}
    <h1>Génération de CV</h1>
{#    {{ dump(form.theme) }}#}

    {{ include('cv/_form.html.twig') }}

    <script>
        const addFormToCollection = (e) => {
            const collectionHolder = document.querySelector('.' + e.currentTarget.dataset.collectionHolderClass);
            const item = document.createElement('div');
            item.classList.add('tag-theme');
            item.classList.add('col-sm-6');
            item.classList.add('mb-3');
            item.classList.add('theme' + collectionHolder.dataset.index);
            item.setAttribute('id', 'theme' + collectionHolder.dataset.index);
            const currentIndex = collectionHolder.dataset.index;
            item.innerHTML = collectionHolder
                .dataset
                .prototype
                .replace(
                    /__name__/g,
                    collectionHolder.dataset.index
                );

            // const para = document.createElement("button");
            // para.innerText = "This is a paragraph";
            // item.appendChild(para);

            const addFormButton = document.createElement('button');
            addFormButton.classList.add('subtheme');
            addFormButton.innerText = 'add subtheme1';


            collectionHolder.appendChild(item);
            console.log(item);

            collectionHolder.dataset.index++;
            // add a delete link to the new form
            addTagFormDeleteLink(item);
            addSubThemeFormLink(item,currentIndex);

            $('#cv_theme_0_name').select2({
                minimumInputLength:1,
                "ajax": {
                    data:function (term, page) {
                        return { term:term, page:page };
                    },
                    dataType:"json",
                    quietMillis:100,
                    results: function (data, page) {
                        return {results: data.results};
                    },
                    "url": '/cv/ajax-skill-choice'
                },
                id: function(object) {
                    return object.text;
                },
                // Allow manually entered text in drop down.
                createSearchChoice:function(term, data) {
                    if ( $(data).filter( function() {
                        return this.text.localeCompare(term)===0;
                    }).length===0) {
                        return {id:term, text:term};
                    }
                },
            });

        };

        const addSubThemeFormToCollection = (e) => {
            const collectionHolder = document.querySelector('#cv_theme_0_subTheme');
            console.log(e.currentTarget.dataset.theme)

            $('#cv_theme_0').innerHTML = collectionHolder
                .dataset
                .prototype
                .replace(
                    /__name__/g,
                    collectionHolder.dataset.index
                );

            $('#cv_theme_0').append(collectionHolder.dataset.prototype);
            collectionHolder.dataset.index++;
        };

        const addTagFormDeleteLink = (item) => {
            const removeFormButton = document.createElement('button');
            removeFormButton.innerText = 'Delete this Theme';

            item.append(removeFormButton);

            removeFormButton.addEventListener('click', (e) => {
                e.preventDefault();
                // remove the li for the tag form
                item.remove();
            });
        }

        const addSubThemeFormLink = (item, index) => {
            const addFormButton = document.createElement('button');
            addFormButton.classList.add('subtheme');
            addFormButton.innerText = 'add subtheme';
            addFormButton.setAttribute('data-theme', 'theme' + index);
            item.appendChild(addFormButton);

            item.append(addFormButton);

            addFormButton.addEventListener('click', (e) => {
                e.preventDefault();
                addSubThemeFormToCollection(e)
            });
        }

        // document
        //     .querySelectorAll('.add_item_link')
        //     .forEach(btn => {
        //         btn.addEventListener("click", addFormToCollection)
        //     });

        document
            .querySelectorAll('.add_item_link')
            .forEach(btn => {
                btn.addEventListener("click", addFormToCollection)
            });

        document
            .querySelectorAll('.tag-theme')
            .forEach((tag) => {
                console.log(tag);
                addTagFormDeleteLink(tag)
            })






    </script>
{% endblock %}


