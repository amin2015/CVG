{% extends 'base.html.twig' %}
{% form_theme form.theme 'form/custom_types.html.twig' %}
{#{% form_theme form.theme.subTheme 'form/custom_types1.html.twig' %}#}
{#{% form_theme form.theme _self %}#}

{% block title %}New Header{% endblock %}

{% block body %}
    <h1>Génération de CV</h1>

    {{ include('cv/_form.html.twig') }}

    <script>

        const initTinymce = () =>{
            tinymce.remove('textarea');
            tinymce.init({
                selector: 'textarea',
                plugins: [
                    'a11ychecker','advlist','advcode','advtable','autolink','checklist','export',
                    'lists','link','image','charmap','preview','anchor','searchreplace','visualblocks',
                    'powerpaste','fullscreen','formatpainter','insertdatetime','media','table','help','wordcount'
                ],
                toolbar: 'undo redo | a11ycheck casechange blocks | bold italic backcolor | alignleft aligncenter alignright alignjustify |' +
                    'bullist numlist checklist outdent indent | removeformat | code table help',
                init_instance_callback : function(editor) {
                    document.querySelectorAll('[role="alert"]').forEach(function (el){
                        el.style.display = 'none';
                    });
                }
            })
        }
        initTinymce();
        const select2Generate = (selector) => {
            $(selector).select2({
                minimumInputLength:1,
                "ajax": {
                    data:function (term, page) {
                        return { term:term, page:page };
                    },
                    dataType:"json",
                    quietMillis:100,
                    results: function (data, page) {
                        return {results: data.results};
                    },
                    "url":function (select) {
                        return $(this).attr('data-field');
                    }
                },
                id: function(object) {
                    return object.text;
                },
                // Allow manually entered text in drop down.
                createSearchChoice:function(term, data) {
                    if ( $(data).filter( function() {
                        return this.text.localeCompare(term)===0;
                    }).length===0) {
                        return {id:term, text:term};
                    }
                },
            });
        }

        select2Generate(".select2-cv-data");

        const addFormToCollection = (e) => {
            const currentcollectionHolderName = '.' + e.currentTarget.dataset.collectionHolderClass;
            const collectionHolder = document.querySelector(currentcollectionHolderName);

            const item = document.createElement('div');
            item.classList.add('tag-theme');
            // console.log(e.currentTarget);
            // item.classList.add('col-sm-6');
            // item.classList.add('mb-3');
            item.classList.add('theme' + collectionHolder.dataset.index);
            item.setAttribute('id', 'theme' + collectionHolder.dataset.index);
            const currentIndex = collectionHolder.dataset.index;
            item.innerHTML = collectionHolder
                .dataset
                .prototype
                .replace(
                    /__name__/g,
                    collectionHolder.dataset.index
                );

            collectionHolder.appendChild(item);

            const collectionHolderFieldset = document.querySelector(currentcollectionHolderName +
                " #cv_theme_" +
                collectionHolder.dataset.index + " > fieldset");

            // const subthemeholder = document.createElement('div');
            // subthemeholder.classList.add('subthemeholder');
            // collectionHolderFieldset.appendChild(subthemeholder);
            // console.log(item);

            collectionHolder.dataset.index++;
            // add a delete link to the new form
            // addTagFormDeleteLink(item);
            addSubThemeFormLink(item,currentIndex);

            select2Generate(".select2-cv-data");
        };

        const addSubThemeFormToCollection = (e) => {
            const collectionHolder = document.querySelector('#cv_theme_'+e.currentTarget.dataset.themeindex+'_subTheme');
            let subTheme = '#cv_' + e.currentTarget.dataset.theme;
            const subthemeCollectionHolder = $(subTheme + " div.subthemeholder  fieldset").length;

            const nameSubtheme = "cv_theme_"+e.currentTarget.dataset.themeindex+"_subTheme_"+e.currentTarget.dataset.themeindex;
            const regexname = new RegExp(nameSubtheme, 'g');
            const newNameSubthemeHtml = "cv_theme_"+e.currentTarget.dataset.themeindex+"_subTheme_"+subthemeCollectionHolder;

            const nameSubthemeInputName = "cv\\[theme]\\["+e.currentTarget.dataset.themeindex+"]\\[subTheme]\\["+e.currentTarget.dataset.themeindex+"]";
            const regexInput = new RegExp(nameSubthemeInputName, 'g');
            const newNameSubthemeForm = "cv[theme]["+e.currentTarget.dataset.themeindex+"][subTheme]["+subthemeCollectionHolder+"]";

            subthemeForm = collectionHolder
                .dataset
                .prototype
                .replace(
                    regexInput,
                    newNameSubthemeForm
                );

            subthemeFormHtml = subthemeForm
                .replace(
                    regexname,
                    newNameSubthemeHtml
                );

            $(subTheme + " > fieldset.mb-3 .subthemeholder").append(subthemeFormHtml);
            collectionHolder.dataset.index++;

            select2Generate(".select2-cv-data");
        };

        const addTagFormDeleteLink = (item) => {
            const removeFormButton = document.createElement('button');
            removeFormButton.innerText = 'Delete this Theme';

            item.append(removeFormButton);

            removeFormButton.addEventListener('click', (e) => {
                e.preventDefault();
                // remove the li for the tag form
                item.remove();
            });
        }

        const addSubThemeFormLink = (item, index) => {
            const addFormButton = document.createElement('button');
            addFormButton.classList.add('subtheme');
            addFormButton.classList.add('btn');
            addFormButton.classList.add('btn-secondary');
            addFormButton.innerText = 'add subtheme';
            addFormButton.setAttribute('data-theme', 'theme_' + index);
            addFormButton.setAttribute('data-themeindex',index);
            item.appendChild(addFormButton);

            item.append(addFormButton);

            addFormButton.addEventListener('click', (e) => {
                e.preventDefault();
                addSubThemeFormToCollection(e)
            });
        }

        // document
        //     .querySelectorAll('.add_item_link')
        //     .forEach(btn => {
        //         btn.addEventListener("click", addFormToCollection)
        //     });

        document
            .querySelectorAll('.add_item_link')
            .forEach(btn => {
                btn.addEventListener("click", addFormToCollection)
            });

        document
            .querySelectorAll('.tag-theme')
            .forEach((tag) => {
                addTagFormDeleteLink(tag)
            })

        if(document.querySelectorAll('.prototype').length > 0) {
            document
                .querySelectorAll('.prototype')
                .forEach(btn => {
                    dd = btn.dataset
                        .prototype
                        .replace(
                            /__name__/g,
                            0
                        );
                    btn.dataset.prototype = dd;
                });

            document
                .querySelectorAll('button.subtheme')
                .forEach(btn => {
                    btn.addEventListener('click', (e) => {
                        e.preventDefault();
                        addSubThemeFormToCollection(e)
                    })
                });
        }
    </script>
{% endblock %}


